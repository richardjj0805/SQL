-------------------------------------------
Check File and Move to a new Location
-------------------------------------------

CREATE TABLE #flg (line varchar(255))
INSERT INTO #flg (line)
EXEC master..xp_cmdshell 'dir /b  \\SYDSMFTNAS01\MIPORTAL\1_MIPORTAL_DATA\BAYERPHARMA_AU\1_RECEIVED'

declare @cmdline varchar(2000)

IF Exists (SELECT * FROM #flg WHERE line LIKE 'Bayer Pharma - Development and Support Task Status_%.xlsx')
BEGIN
Print 'Moving File'
set @cmdline ='MOVE /Y "\\SYDSMFTNAS01\MIPORTAL\1_MIPORTAL_DATA\BAYERPHARMA_AU\1_RECEIVED\Bayer Pharma - Development and Support Task Status_*.xlsx" "\\SYDSMFTNAS01\MIPORTAL\1_MIPORTAL_DATA\BAYERPHARMA_AU\WeeklyTask_List"'
EXECUTE master..xp_cmdshell @cmdline

END
ELSE
BEGIN
	RAISERROR('No new files to load', 11, 1)
END


-------------------------------------------
Dump Data into a EXCEL File
-------------------------------------------

--Create a TEMP Table with some data

SELECT * INTO #TEST123 from (
select A.employee_code,B.EMPLOYEE_NAME, A.team_name,A.period_name,number_of_days,
MAX(A.number_of_days) over (partition by A.team_name,A.period_name ) as MaxNumberOfDays ,
AVG(A.number_of_days) over (partition by A.team_name,A.period_name ) as AVGNumberOfDays ,
MIN(A.number_of_days) over (partition by A.team_name,A.period_name) as MINNumberOfDays ,
ROW_NUMBER() over (partition by A.team_name,A.Period_name order by A.NUMBER_OF_DAYS DESC ) as  rankingFromTop 
from (
select employee_code,period_name,team_name, sum(number_of_days) as number_of_days from stg_act_days
where daytype_name <> 'Field Day' 
group by 
employee_code,period_name,team_name
)  A inner join dim_act_employee B
ON a.employee_code=B.employee_code
) a

DECLARE @date varchar(25)
DECLARE @file_name varchar(255)
DECLARE @sql varchar(8000)
DECLARE @data_file varchar(100)
DECLARE @output_path_with_sub varchar(500)
DECLARE @dest_folder varchar (500)
DECLARE @template_folder varchar (500)
DECLARE @output_path varchar (500)
DECLARE @print varchar (500)
DECLARE @output_sub_folder varchar(500)
DECLARE	@filedate varchar(20)

--This is DEstination folder name
SELECT @dest_folder = 'Extract' 

--Diretory or path for the DEstination folder
--SELECT @output_path = '\\SQLDev1\mercurialshare\1_MiPORTAL_DATA\SEQIRUS\13_DELIVERABLES\MiperformanceCAPExtract\Extract\'
SELECT @output_path = '\\SYDSMFTNAS01\MIPORTAL\1_MiPORTAL_DATA\BAYERPHARMA_AU\Extract\'

--Template folder where the structrue for the output file is stored.
--SELECT @template_folder = '\\SQLDev1\mercurialshare\1_MiPORTAL_DATA\SEQIRUS\13_DELIVERABLES\MiperformanceCAPExtract\Templates\CAP_Incentives.xlsx'
SELECT @template_folder = '\\SYDSMFTNAS01\MIPORTAL\1_MiPORTAL_DATA\BAYERPHARMA_AU\WeeklyTask_List\Bayer Analysis.xlsx'

SELECT @output_path = @output_path +  'Bayer Analysis_' +  (Replace(Convert(varchar, GETDATE(), 112), '-', '')) + '.xlsx'
PRINT @output_path

--Copy the Template files from the Template folder to the Extract Folder
DECLARE @cmd varchar (500)
SET @Cmd = 'COPY "' + @template_folder + '" "'+ @output_path + '"' 
PRINT @Cmd
EXECUTE master..xp_cmdshell @Cmd, no_output 

SELECT @template_folder, @output_path


SET @file_name = @output_path 

--Move data to a EXCEL File
SELECT @sql =  ('INSERT INTO OPENROWSET(''Microsoft.ACE.OLEDB.12.0'', 
				 ''Excel 8.0;Database=' + @file_name + ';'', 
				 ''SELECT * FROM [sheet1$]'') 
				  SELECT [employee_code]	,[EMPLOYEE_NAME],	[team_name],[period_name],	[number_of_days],	[MaxNumberOfDays],	[AVGNumberOfDays],	[MINNumberOfDays],	[rankingFromTop]
					FROM  #TEST123')
PRINT(@sql)			
EXECUTE (@sql)

----------------------------------------------------------------
-- Load Excel  File
----------------------------------------------------------------
DECLARE @Msg varchar(100)
DECLARE @SQL varchar(8000)
DECLARE @table_name varchar(100)
DECLARE @src_table_name varchar(100)
DECLARE @metadata_file varchar(255)
SELECT @Msg = Convert(varchar, GetDate(), 113) + ' - Load Excel Metadata File' 
RAISERROR(@Msg, 0, 1) WITH NOWAIT

SELECT @metadata_File = '\\SYDSMFTNAS01\MIPORTAL\1_MIPORTAL_DATA\BAYERPHARMA_AU\1_RECEIVED\Bayer Pharma - Development and Support Task Status_20180904.xlsx'

-- Create initial connection to Excel metadata
IF EXISTS(SELECT * FROM master.dbo.sysservers WHERE srvname = 'BAYERPHARMA_AU_Testing')
BEGIN
	EXECUTE sp_droplinkedsrvlogin 'BAYERPHARMA_AU_Testing',NULL
	EXECUTE sp_dropserver 'BAYERPHARMA_AU_Testing'
END


EXECUTE sp_addlinkedserver
'BAYERPHARMA_AU_Testing','EXCEL','Microsoft.ACE.OLEDB.12.0',@metadata_File,NULL,'Excel 12.0'

IF OBJECT_ID('raw_linked_tables') IS NOT NULL EXECUTE('DROP TABLE raw_linked_tables')

CREATE TABLE raw_linked_tables
(
      table_cat varchar(8000),
      table_schem varchar(8000),
      table_name varchar(8000),
      table_type varchar(8000),
      remarks    varchar(8000)
)

EXEC master.dbo.sp_addlinkedsrvlogin	@rmtsrvname = N'BAYERPHARMA_AU_Testing',
										@useself = N'false',
										@rmtuser=NULL,
										@rmtpassword= NULL

INSERT INTO raw_linked_tables
EXECUTE sp_tables_ex 'BAYERPHARMA_AU_Testing'

DECLARE cSheets CURSOR FOR
	SELECT table_name
	FROM raw_linked_tables
OPEN cSheets
FETCH cSheets INTO @src_table_name
WHILE @@FETCH_STATUS = 0
BEGIN
      SELECT @table_name = '' + REPLACE(REPLACE(@src_table_name, ' ', ''), '$', '')
      
      IF OBJECT_ID('' +'[raw_all_Bayer_' + @table_name + ']') IS NOT NULL EXECUTE('DROP TABLE ' + '[raw_all_metadata_' + @table_name + ']')
      
      SELECT	@SQL = 'SELECT * INTO [raw_all_Bayer_' + @table_name + '] FROM BAYERPHARMA_AU_Testing...' + '[' + @src_table_name + ']'
      EXECUTE	(@SQL)

	  PRINT (@SQL)
      
      FETCH cSheets INTO @src_table_name
END
CLOSE cSheets
DEALLOCATE cSheets

-- Clean up connections to the Excel metadata
IF EXISTS(SELECT * FROM master.dbo.sysservers WHERE srvname = 'BAYERPHARMA_AU_Testing')
BEGIN
	EXECUTE sp_droplinkedsrvlogin 'BAYERPHARMA_AU_Testing',NULL
	EXECUTE sp_dropserver 'BAYERPHARMA_AU_Testing'
END

-- Check the data in the new table
SELECT * FROM [raw_all_Bayer_BAYERPHARMA_AU_Testing]
